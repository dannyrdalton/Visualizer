<div data-role="header">
	<h1 class="visualizerName"><%= name %></h1>
	<a href="#" data-role="button" data-rel="back" data-icon="arrow-l">Back</a>
</div>

<div data-role="content" role="main">
	<div id="input-wrapper">
		<p>Tap the screen to the beat!</p>
		<div class="full-screen-overlay">
			YOU SHOULD NOT SEE THIS
		</div>
		<div class="color-indicator"> 
		</div>
		<div class="color-slider">
	            <input type="range" name="slider" id="slider-1" value="0" min="0" max="1536"  />
		</div>
	</div>
</div>


<script type="text/javascript">
	var type = "circles";
	
	var name = $('.visualizerName').html();
	$('.full-screen-overlay').height($(this).height() - 46);
	
	var pusher = new Pusher('1c0d1fc18d1af207286e');
	var presenceChannel = pusher.subscribe('presence-' + name);
	
/*
	channel.bind('new-price', function(data) {
	    // add new price into the APPL widget
	});
*/
	var socketID = null;
	pusher.connection.bind('connected', function() {
		socketID = pusher.connection.socket_id;
		
	});

	var color = "#ff0000";
	
	function componentToHex(c) {
    	var hex = c.toString(16);
    	return hex.length == 1 ? "0" + hex : hex;
	}

	function rgbToHex(r, g, b) {
    	return "#" + componentToHex(r) + componentToHex(g) + componentToHex(b);
	}
/* 	var socket = io.connect(window.location.hostname); */
	
	var date;
	
	$('.full-screen-overlay').bind('tap', function(e) {
		date = new Date();
/* 	    socket.emit('trigger', { timestamp : date.getTime(), color : color }); */
/* 	    $('#input-wrapper').append('<br />Event sent at ' + date.getTime()); */
		console.log('Tapped!!!');
		presenceChannel.trigger('client-tapped', { id : presenceChannel.members.me.id, color : color, timestamp : date.getTime() } );
	});
	
	$(".color-slider").change(function() {
    	var sVal = $('#slider-1').val();
    	console.log("Sval is %i", sVal);
    	if (sVal >= 0 && sVal < 256) {
    		color = rgbToHex(255, sVal, 0);
    	}
    	if (sVal >= 256 && sVal < 512) {
    		color = rgbToHex(255 - (sVal - 256), 255, 0);
    	}
    	if (sVal >= 512 && sVal < 768) {
    		color = rgbToHex(0, 255, sVal - 512);
    	}
    	if (sVal >= 768 && sVal < 1024) {
    		color = rgbToHex(0, 255 - (sVal - 768), 255);
    	}
    	if (sVal >= 1024 && sVal < 1280) {
    		color = rgbToHex(sVal - 1024, 0, 255);
    	}
    	if (sVal >= 1280 && sVal < 1536) {
    		color = rgbToHex(255, 0, 255 - (sVal - 1280));
    	}
    	console.log("Color is %s", color);
    	var test = $(".color-indicator").css("background-color", color);
    	console.log("BG color is %s", test);
    	
    	
    	
    });

</script>